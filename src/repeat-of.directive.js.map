{"version":3,"file":"repeat-of.directive.js","sourceRoot":"","sources":["repeat-of.directive.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EAAC,SAAS,EAAE,KAAK,EAAa,UAAU,EAAE,QAAQ,EAAC,MAAM,eAAe;OACxE,EAAC,wBAAwB,EAAE,SAAS,EAA8B,aAAa,EAAC,MAAM,gBAAgB;AAG7G,IAAM,KAAK,GAAO,IAAK,CAAC;AACxB,IAAM,IAAI,GAAG,cAAO,CAAC,CAAC;AAYtB;IAMI,2BAAoB,SAAmB;QAAnB,cAAS,GAAT,SAAS,CAAU;QAF/B,cAAS,GAAe,IAAI,CAAC;IAGrC,CAAC;IAGD,sBAAI,uCAAQ;aAAZ,UAAa,KAA+B;YACxC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC;;;OAAA;IAED,oCAAQ,GAAR,UAAS,OAAwB;QAC7B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAClB,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,IAAI,OAAO,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QACD,MAAM,CAAC,EAAC,QAAQ,EAAE,oBAAoB,EAAC,CAAC;IAC5C,CAAC;IAED,qDAAyB,GAAzB,UAA0B,EAAc;QACpC,IAAI,CAAC,SAAS,GAAG,EAAE,IAAI,IAAI,CAAC;IAChC,CAAC;IAED,uCAAW,GAAX;QACI,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEO,qCAAS,GAAjB;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAClB,MAAM,CAAC;QACX,CAAC;QAED,IAAM,OAAO,GAAc,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAEzD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAChE,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,OAAO,CAAC,sBAAsB,EAAE,EAAxC,CAAwC,CAAC,CAAC;IAC3D,CAAC;IAEO,uCAAW,GAAnB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;YACnC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;QACrC,CAAC;IACL,CAAC;IA7CD;QAAC,KAAK,EAAE;;;qDAAA;IAnBZ;QAAC,SAAS,CAAC;YACP,QAAQ,EAAE,YAAY;YACtB,SAAS,EAAE;gBACP;oBACI,OAAO,EAAE,aAAa;oBACtB,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,iBAAiB,EAAjB,CAAiB,CAAC;oBAChD,KAAK,EAAE,IAAI;iBACd;aACJ;SACJ,CAAC;;yBAAA;IAyDF,wBAAC;AAAD,CAAC,AAxDD,IAwDC","sourcesContent":["import {Directive, Input, OnDestroy, forwardRef, Injector} from \"@angular/core\";\nimport {AbstractControlDirective, NgControl, Validator, AbstractControl, NG_VALIDATORS} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\n\nconst VALID: {} = null!;\nconst NOOP = () => {};\n\n@Directive({\n    selector: '[repeatOf]',\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useExisting: forwardRef(() => RepeatOfDirective),\n            multi: true,\n        }\n    ],\n})\nexport class RepeatOfDirective implements Validator, OnDestroy {\n\n    private _repeatOf?: AbstractControlDirective;\n    private _repeatOfSubscr?: Subscription;\n    private _onChange: () => void = NOOP;\n\n    constructor(private _injector: Injector) {\n    }\n\n    @Input()\n    set repeatOf(value: AbstractControlDirective) {\n        this._repeatOf = value;\n        this.unsubscribe();\n        this.subscribe();\n        this._onChange();\n    }\n\n    validate(control: AbstractControl): {} {\n        if (!this._repeatOf) {\n            return VALID;\n        }\n        if (control.value == null || control.value === \"\") {\n            return VALID;\n        }\n        if (control.value == this._repeatOf.value) {\n            return VALID;\n        }\n        return {\"repeat\": \"Values don't match\"};\n    }\n\n    registerOnValidatorChange(fn: () => void): void {\n        this._onChange = fn || NOOP;\n    }\n\n    ngOnDestroy() {\n        this.unsubscribe();\n    }\n\n    private subscribe() {\n        if (!this._repeatOf) {\n            return;\n        }\n\n        const control: NgControl = this._injector.get(NgControl);\n\n        this._repeatOfSubscr = this._repeatOf.control.valueChanges.subscribe(\n            value => control.control.updateValueAndValidity());\n    }\n\n    private unsubscribe() {\n        if (this._repeatOfSubscr) {\n            this._repeatOfSubscr.unsubscribe();\n            this._repeatOfSubscr = undefined;\n        }\n    }\n\n}\n"]}