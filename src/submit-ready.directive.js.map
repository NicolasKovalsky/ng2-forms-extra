{"version":3,"sources":["submit-ready.directive.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAA,SAAE,EAAU,YAAA,EAAc,MAAA,EAAQ,YAAA,EAAyB,UAAA,EAAW,MAAM,eAAA,CAAgB;AACnG,OAAO,EAAA,aAAE,EAAc,WAAA,EAAY,MAAM,SAAA,CAAU;AAGnD;IAA0C,wCAAa;IAQnD;QAAA,YACI,iBAAO,SACV;QAPQ,eAAS,GAAG,IAAI,YAAY,EAAO,CAAC;QAGpC,iBAAW,GAAG,IAAI,YAAY,EAAO,CAAC;;IAI/C,CAAC;IAGD,uCAAQ,GAAR;QACI,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,qCAAM,GAAN;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE1B,IAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAC,UAAU,EAAE,KAAK,EAAC,CAAC,CAAC;QAE3D,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE5B,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,0CAAW,GAAX;QACI,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IAChC,CAAC;IA0BL,2BAAC;AAAD,CA5DA,AA4DC,CA5DyC,aAAa;;AAoChD,+BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACtB,QAAQ,EAAE,kDAAkD;gBAC5D,QAAQ,EAAE,YAAY;gBACtB,SAAS,EAAE;oBACP;wBACI,OAAO,EAAE,aAAa;wBACtB,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,oBAAoB,EAApB,CAAoB,CAAC;qBACtD;oBACD;wBACI,OAAO,EAAE,WAAW;wBACpB,WAAW,EAAE,aAAa;qBAC7B;iBACJ;aACJ,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,mCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AACK,mCAAc,GAA2C;IAChE,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAChC,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAClC,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,UAAU,EAAG,EAAE,EAAE;CAC1D,CAAC","file":"submit-ready.directive.js","sourceRoot":"","sourcesContent":["import {Directive, HostListener, Output, EventEmitter, OnDestroy, forwardRef} from \"@angular/core\";\nimport {SubmitService, SubmitGroup} from \"./model\";\n\n\nexport class SubmitReadyDirective extends SubmitService implements OnDestroy {\n\n    \n    readonly preSubmit = new EventEmitter<any>();\n\n    \n    readonly submitReady = new EventEmitter<any>();\n\n    constructor() {\n        super();\n    }\n\n    \n    onSubmit() {\n        this.submit();\n    }\n\n    submit(): boolean {\n        this._submitted = true;\n        this.preSubmit.emit(null);\n\n        const status = this.updateInputStatus({emitEvents: false});\n\n        if (!status.ready) {\n            return false;\n        }\n\n        this.submitReady.emit(null);\n\n        return true;\n    }\n\n    ngOnDestroy() {\n        this.submitReady.complete();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'form:not([ngNoForm]),ngForm,[ngForm],[formGroup]',\n    exportAs: \"frexSubmit\",\n    providers: [\n        {\n            provide: SubmitService,\n            useExisting: forwardRef(() => SubmitReadyDirective),\n        },\n        {\n            provide: SubmitGroup,\n            useExisting: SubmitService,\n        },\n    ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'preSubmit': [{ type: Output },],\n'submitReady': [{ type: Output },],\n'onSubmit': [{ type: HostListener, args: ['ngSubmit', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}