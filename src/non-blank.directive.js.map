{"version":3,"sources":["non-blank.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAkB,aAAA,EAA4C,UAAA,EAAW,MAAM,gBAAA,CAAiB;AACvG,OAAO,EAAA,SAAE,EAAU,UAAA,EAAY,KAAA,EAAM,MAAM,eAAA,CAAgB;AAE3D,IAAM,IAAA,GAAO,cAAM,CAAA,CAAG;AAGtB;IAAA;QAGY,cAAS,GAAe,IAAI,CAAC;IAsCzC,CAAC;IApCG,sBAAI,uCAAQ;aAAZ;YACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;aAGD,UAAa,KAAc;YACvB,IAAI,CAAC,SAAS,GAAG,KAAK,IAAI,IAAI,IAAI,KAAG,KAAO,KAAK,OAAO,CAAC;YACzD,IAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC;;;OANA;IAQD,oCAAQ,GAAR,UAAS,CAAkB;QACvB,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACzD,CAAC;IAED,qDAAyB,GAAzB,UAA0B,EAAc;QACpC,IAAI,CAAC,SAAS,GAAG,EAAE,IAAI,IAAI,CAAC;IAChC,CAAC;IAoBL,wBAAC;AAAD,CAzCA,AAyCC;;AAlBM,4BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACtB,QAAQ,EAAE,YAAY;gBACtB,SAAS,EAAE;oBACP;wBACI,OAAO,EAAE,aAAa;wBACtB,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,iBAAiB,EAAjB,CAAiB,CAAC;wBAChD,KAAK,EAAE,IAAI;qBACd;iBACJ;aACJ,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,gCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AACK,gCAAc,GAA2C;IAChE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAC7B,CAAC","file":"non-blank.directive.js","sourceRoot":"","sourcesContent":["import {AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, Validators} from \"@angular/forms\";\nimport {Directive, forwardRef, Input} from \"@angular/core\";\n\nconst NOOP = () => {};\n\n\nexport class NonBlankDirective implements Validator {\n\n    private _required: boolean;\n    private _onChange: {(): void} = NOOP;\n\n    get nonBlank(): boolean {\n        return this._required;\n    }\n\n    \n    set nonBlank(value: boolean) {\n        this._required = value != null && `${value}` !== 'false';\n        this._onChange();\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null {\n        return this.nonBlank ? Validators.required(c) : null;\n    }\n\n    registerOnValidatorChange(fn: () => void): void {\n        this._onChange = fn || NOOP;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[nonBlank]',\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useExisting: forwardRef(() => NonBlankDirective),\n            multi: true,\n        }\n    ],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'nonBlank': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}