{"version":3,"file":"non-blank.directive.js","sourceRoot":"","sources":["non-blank.directive.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EAAC,aAAa,EAA8B,UAAU,EAAC,MAAM,gBAAgB;OAC7E,EAAC,SAAS,EAAE,UAAU,EAAE,KAAK,EAAC,MAAM,eAAe;AAE1D,IAAM,KAAK,GAAO,IAAK,CAAC;AACxB,IAAM,IAAI,GAAG,cAAO,CAAC,CAAC;AAYtB;IAAA;QAGY,cAAS,GAAe,IAAI,CAAC;IAoBzC,CAAC;IAlBG,sBAAI,uCAAQ;aAAZ;YACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;aAGD,UAAa,KAAc;YACvB,IAAI,CAAC,SAAS,GAAG,KAAK,IAAI,IAAI,IAAI,KAAG,KAAO,KAAK,OAAO,CAAC;YACzD,IAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC;;;OANA;IAQD,oCAAQ,GAAR,UAAS,CAAkB;QACvB,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IAC1D,CAAC;IAED,qDAAyB,GAAzB,UAA0B,EAAc;QACpC,IAAI,CAAC,SAAS,GAAG,EAAE,IAAI,IAAI,CAAC;IAChC,CAAC;IAZD;QAAC,KAAK,EAAE;;qDAAA;IAnBZ;QAAC,SAAS,CAAC;YACP,QAAQ,EAAE,YAAY;YACtB,SAAS,EAAE;gBACP;oBACI,OAAO,EAAE,aAAa;oBACtB,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,iBAAiB,EAAjB,CAAiB,CAAC;oBAChD,KAAK,EAAE,IAAI;iBACd;aACJ;SACJ,CAAC;;yBAAA;IAwBF,wBAAC;AAAD,CAAC,AAvBD,IAuBC","sourcesContent":["import {NG_VALIDATORS, Validator, AbstractControl, Validators} from \"@angular/forms\";\nimport {Directive, forwardRef, Input} from \"@angular/core\";\n\nconst VALID: {} = null!;\nconst NOOP = () => {};\n\n@Directive({\n    selector: '[nonBlank]',\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useExisting: forwardRef(() => NonBlankDirective),\n            multi: true,\n        }\n    ],\n})\nexport class NonBlankDirective implements Validator {\n\n    private _required: boolean;\n    private _onChange: () => void = NOOP;\n\n    get nonBlank(): boolean {\n        return this._required;\n    }\n\n    @Input()\n    set nonBlank(value: boolean) {\n        this._required = value != null && `${value}` !== 'false';\n        this._onChange();\n    }\n\n    validate(c: AbstractControl): {} {\n        return this.nonBlank ? Validators.required(c) : VALID;\n    }\n\n    registerOnValidatorChange(fn: () => void): void {\n        this._onChange = fn || NOOP;\n    }\n\n}\n"]}