{"version":3,"file":"submit.service.js","sourceRoot":"","sources":["submit.service.ts"],"names":[],"mappings":"AAGA;IAAA;QAMc,eAAU,GAAG,KAAK,CAAC;IAkBjC,CAAC;IAdG,sBAAI,oCAAS;aAAb;YACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QAC3B,CAAC;;;OAAA;IAID,sCAAc,GAAd;QACI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC5B,CAAC;IAML,oBAAC;AAAD,CAAC,AAxBD,IAwBC","sourcesContent":["import {EventEmitter} from \"@angular/core\";\nimport {ReadyForSubmit, RegistryHandle} from \"./model\";\n\nexport abstract class SubmitService implements ReadyForSubmit {\n\n    abstract readonly readyStateChanges: EventEmitter<boolean>;\n    abstract readonly preSubmit: EventEmitter<any>;\n    abstract readonly submitReady: EventEmitter<any>;\n\n    protected _submitted = false;\n\n    abstract readonly ready: boolean;\n\n    get submitted(): boolean {\n        return this._submitted;\n    }\n\n    abstract submit(): boolean;\n\n    resetSubmitted(): void {\n        this._submitted = false;\n    }\n\n    abstract addReadyForSubmit(ready: ReadyForSubmit): RegistryHandle;\n\n    abstract updateReadyState(opts?: {emitEvents?: boolean}): boolean;\n\n}\n"]}