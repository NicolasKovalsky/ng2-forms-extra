{"version":3,"file":"input.service.js","sourceRoot":"","sources":["input.service.ts"],"names":[],"mappings":"OAAO,EAAC,YAAY,EAAC,MAAM,eAAe;AAI1C;IAAA;QAEa,mBAAc,GAAG,IAAI,YAAY,EAAqB,CAAC;QAIvD,sBAAiB,GAAG,IAAI,YAAY,EAAW,CAAC;IAM7D,CAAC;IAAD,mBAAC;AAAD,CAAC,AAZD,IAYC","sourcesContent":["import {EventEmitter} from \"@angular/core\";\nimport {AbstractControl} from \"@angular/forms\";\nimport {ReadyForSubmit} from \"./model\";\n\nexport abstract class InputService implements ReadyForSubmit {\n\n    readonly controlChanges = new EventEmitter<AbstractControl[]>();\n\n    abstract readonly controls: AbstractControl[];\n\n    readonly readyStateChanges = new EventEmitter<boolean>();\n\n    abstract readonly ready: boolean;\n\n    abstract updateReadyState(opts?: {emitEvents?: boolean}): boolean;\n\n}\n"]}