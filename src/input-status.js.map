{"version":3,"file":"input-status.js","sourceRoot":"","sources":["input-status.ts"],"names":[],"mappings":"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","sourcesContent":["export abstract class InputStatus {\n\n    constructor(private _id: string) {\n    }\n\n    get id(): string {\n        return this._id;\n    }\n\n    get nested(): InputStatus[] {\n        return [];\n    }\n\n    get ready(): boolean {\n\n        const readiness = this.get(inputReadinessId);\n\n        return readiness == null || readiness.ready;\n    }\n\n    get errors(): {[key: string]: any} | undefined {\n\n        const errors = this.get(inputErrorsId);\n\n        return errors && errors.errors;\n    }\n\n    get(id: string | symbol): InputStatus | undefined {\n        return id === this.id ? this : undefined;\n    }\n\n    equals(status: InputStatus | null | undefined): boolean {\n        if (!status) {\n            return false;\n        }\n        if (status === this) {\n            return true;\n        }\n        if (this.id === status.id) {\n            if (this.nested.length != status.nested.length) {\n                return false;\n            }\n            if (!this.nested.length) {\n                return this.equalValues(status as this);\n            }\n        }\n        return this.combine().equalValues(status.combine());\n    }\n\n    abstract equalValues(status: this): boolean;\n\n    merge(status: InputStatus): InputStatus {\n        if (this.id === status.id && !this.nested.length && !status.nested.length) {\n            return this.mergeValues(status as this);\n        }\n        return this.combine().add(status);\n    }\n\n    abstract mergeValues(status: this): this;\n\n    private combine(): CombinedInputStatus {\n        return new CombinedInputStatus().add(this);\n    }\n\n}\n\nconst combinedInputStatusId = \"__combined__\";\n\nclass CombinedInputStatus extends InputStatus {\n\n    private readonly _map: {[key: string]: InputStatus} = {};\n    private _list?: InputStatus[];\n\n    constructor() {\n        super(combinedInputStatusId);\n    }\n\n    get(id: string | symbol): InputStatus | undefined {\n        return id === this.id ? this : this._map[id];\n    }\n\n    get nested(): InputStatus[] {\n        if (this._list) {\n            return this._list;\n        }\n\n        const list: InputStatus[] = [];\n\n        for (let id in this._map) {\n            if (this._map.hasOwnProperty(id)) {\n                list.push(this._map[id]);\n            }\n        }\n\n        this._list = list;\n\n        return list;\n    }\n\n    add(status: InputStatus): this {\n        this._list = undefined;\n        if (status.id !== this.id) {\n\n            const prev: any = this._map[status.id];\n\n            if (!prev) {\n                this._map[status.id] = status;\n            } else {\n                this._map[status.id] = prev.mergeValues(status);\n            }\n        }\n        for (let st of status.nested) {\n            this.add(st);\n        }\n        return this;\n    }\n\n    equalValues(status: this): boolean {\n        return nestedMapContainsAll(this._map, status._map) && mapContainsKeys(status._map, this._map);\n    }\n\n    merge(status: InputStatus): this {\n        return super.merge(status) as this;\n    }\n\n    mergeValues(status: this): this {\n        return new CombinedInputStatus().add(this).add(status) as this;\n    }\n\n}\n\nfunction nestedMapContainsAll(map: {[key: string]: InputStatus}, other: {[key: string]: InputStatus}): boolean {\n    for (let key in map) {\n        if (map.hasOwnProperty(key)) {\n            if (!map[key].equals(other[key])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nconst inputReadinessId = \"__readiness__\";\n\nclass InputReadiness extends InputStatus {\n\n    constructor(private _ready: boolean) {\n        super(inputReadinessId);\n    }\n\n    get ready(): boolean {\n        return this._ready;\n    }\n\n    equalValues(status: this): boolean {\n        return this._ready === status._ready;\n    }\n\n    mergeValues(status: this): this {\n        return this.ready ? status : this;\n    }\n\n}\n\nexport const InputReady: InputStatus = new InputReadiness(true);\nexport const InputNotReady: InputStatus = new InputReadiness(false);\n\nconst inputErrorsId = \"__errors__\";\n\nexport class InputErrors extends InputStatus {\n\n    constructor(private _errors: {[key: string]: any}) {\n        super(inputErrorsId);\n    }\n\n    get errors(): {[key: string]: any} {\n        return this._errors;\n    }\n\n    equalValues(status: this): boolean {\n        return equalMaps(this._errors, status._errors);\n    }\n\n    mergeValues(status: this): this {\n        if (this._errors === status._errors) {\n            return this;\n        }\n\n        const errors: {[key: string]: any} = {};\n\n        for (let key in this._errors) {\n            if (this._errors.hasOwnProperty(key)) {\n                errors[key] = this._errors[key];\n            }\n        }\n        for (let key in status._errors) {\n            if (status._errors.hasOwnProperty(key)) {\n                errors[key] = status._errors[key];\n            }\n        }\n\n        return new InputErrors(errors) as this;\n    }\n\n}\n\nfunction equalMaps(map1: {[key: string]: any}, map2: {[key: string]: any}) {\n    return mapContainsAll(map1, map2) && mapContainsKeys(map2, map1);\n}\n\nfunction mapContainsKeys(map: {[key: string]: any}, other: {[key: string]: any}): boolean {\n    for (let key in map) {\n        if (map.hasOwnProperty(key)) {\n            if (!other.hasOwnProperty(key)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nfunction mapContainsAll(map: {[key: string]: any}, other: {[key: string]: any}): boolean {\n    for (let key in map) {\n        if (map.hasOwnProperty(key)) {\n            if (map[key] !== other[key]) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n"]}