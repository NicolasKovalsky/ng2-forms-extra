{"version":3,"file":"input-control.directive.js","sourceRoot":"","sources":["input-control.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {Directive, Host, OnInit, OnDestroy, EventEmitter, Optional} from \"@angular/core\";\nimport {NgControl, AbstractControl} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\nimport {Submittable, SubmitGroup, RegistryHandle, SubmitService, InputService, SubmittableControl} from \"./model\";\n\n@Directive({\n    selector: '[ngModel],[formControl],[formControlName]'\n})\nexport class InputControlDirective implements SubmittableControl, OnInit, OnDestroy {\n\n    readonly readyStateChanges = new EventEmitter<boolean>();\n    private _ready = true;\n    private _regHandle?: RegistryHandle;\n    private _preSubmitSubscr?: Subscription;\n    private _stateSubscr?: Subscription;\n\n    constructor(\n        @Optional() private _inputService: InputService,\n        private _submitGroup: SubmitGroup<Submittable>,\n        private _submitService: SubmitService,\n        @Host() private _control: NgControl) {\n    }\n\n    get ready(): boolean {\n        return this._ready;\n    }\n\n    get control(): AbstractControl {\n        return this._control.control;\n    }\n\n    updateReadyState({emitEvents = true}: {emitEvents?: boolean} = {}): boolean {\n\n        const ready = !(this.control.invalid && (this.control.dirty || this._submitService.submitted));\n\n        if (this._ready !== ready) {\n            this._ready = ready;\n            if (emitEvents !== false) {\n                this.readyStateChanges.emit(ready);\n            }\n        }\n\n        return ready;\n    }\n\n    ngOnInit() {\n        this._preSubmitSubscr = this._submitService.preSubmit.subscribe(() => this.updateReadyState());\n        this._stateSubscr = this.control.statusChanges.subscribe(() => this.updateReadyState());\n        this.updateReadyState({emitEvents: false});\n        this._regHandle =\n            this._inputService ? this._inputService.addSubmittable(this) : this._submitGroup.addSubmittable(this);\n    }\n\n    ngOnDestroy() {\n        if (this._regHandle) {\n            this._regHandle.unregister();\n            delete this._regHandle;\n        }\n        if (this._stateSubscr) {\n            this._stateSubscr.unsubscribe();\n            delete this._stateSubscr;\n        }\n        if (this._preSubmitSubscr) {\n            this._preSubmitSubscr.unsubscribe();\n            delete this._preSubmitSubscr;\n        }\n    }\n\n}\n"]}